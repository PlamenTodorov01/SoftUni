package workingwithabstraction_exercise.jediGalaxy_05;

import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int[] matrixDimensions = readArray(scanner.nextLine());

        int rows = matrixDimensions[0];
        int cols = matrixDimensions[1];

        int[][] matrix = new int[rows][cols];

        fillMatrix(matrix);

        String input = scanner.nextLine();
        long starPoints = 0;

        while (!input.equals("Let the Force be with you")) {

            int[] jediCoordinates = readArray(input);
            int[] evilCoordinates = readArray(scanner.nextLine());

            int evilRow = evilCoordinates[0];
            int evilCol = evilCoordinates[1];

            moveEvilPlayer(evilRow,evilCol,matrix);

            int jediRow = jediCoordinates[0];
            int jediCol = jediCoordinates[1];

          starPoints = moveJediPlayerAndCollectStars(jediRow,jediCol,matrix,starPoints);

            input = scanner.nextLine();
        }

        System.out.println(starPoints);

    }

    private static long moveJediPlayerAndCollectStars(int jediRow, int jediCol, int[][] matrix, long starPoints) {

        while (jediRow >= 0 && jediCol < matrix[1].length) {
            if (jediRow < matrix.length && jediCol >= 0 && jediCol < matrix[0].length) {
                starPoints += matrix[jediRow][jediCol];
            }
            jediRow--;
            jediCol++;

        }
        return starPoints;
    }

    private static void moveEvilPlayer(int evilRow, int evilCol, int[][] matrix) {

        while (evilRow >= 0 && evilCol >= 0) {
            if (evilRow < matrix.length && evilCol < matrix[0].length) {
                matrix[evilRow][evilCol] = 0;
            }
            evilRow--;
            evilCol--;
        }
    }

    private static int[] readArray(String command) {
        return Arrays.stream(command.split(" ")).mapToInt(Integer::parseInt).toArray();
    }

    private static void fillMatrix(int[][] matrix) {
        int value = 0;
        for (int row = 0; row < matrix.length; row++) {
            for (int col = 0; col < matrix[row].length; col++) {
                matrix[row][col] = value++;
            }
        }
    }
}
