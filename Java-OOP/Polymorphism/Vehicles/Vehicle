package polymorphism_exercise.vehicles_01;

import java.text.DecimalFormat;

public abstract class Vehicle {
    private double fuelQuantity;
    private double fuelCostPerKm;

    public Vehicle(double fuelQuantity, double fuelCostPerKm) {
        this.fuelQuantity = fuelQuantity;
        this.fuelCostPerKm = fuelCostPerKm;
    }

    public double getFuelCostPerKm() {
        return fuelCostPerKm;
    }

    public double getFuelQuantity() {
        return fuelQuantity;
    }

    public void setFuelCostPerKm(double fuelCostPerKm) {
        this.fuelCostPerKm = fuelCostPerKm;
    }

    public void setFuelQuantity(double fuelQuantity) {
        this.fuelQuantity = fuelQuantity;
    }

    public void drive(double distance) {
        double fuelToUse = getFuelCostPerKm() * distance;
        if (getFuelQuantity() < fuelToUse) {
            System.out.printf("%s needs refueling\n", getClass().getSimpleName());
            return;
        }
        DecimalFormat df = new DecimalFormat("#.##");
        setFuelQuantity(getFuelQuantity() - fuelToUse);
        System.out.printf("%s travelled %s km\n", getClass().getSimpleName(), df.format(distance));
    }

    public abstract void refuel(double liters);

    @Override
    public String toString() {
        return String.format("%s: %.2f",getClass().getSimpleName(),getFuelQuantity());
    }
}
