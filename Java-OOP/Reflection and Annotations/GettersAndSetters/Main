package reflection_and_annotations_lab.getters_and_setters;

import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.Comparator;

public class Main {
    public static void main(String[] args) {


        Class<Reflection> clazz = Reflection.class;
        Method[] methods = clazz.getDeclaredMethods();

        Arrays.stream(methods)
                .filter(method -> !method.getName().equals("toString"))
                .sorted(Comparator.comparing(Method::getName))
                .map(Main::toString)
                .forEach(System.out::println);

    }

    private static String toString(Method m) {
        if (m.getName().contains("get")) {
            return m.getName() + " will return class " + m.getReturnType().getName();
        }
            return m.getName() + " and will set field of class " + m.getParameterTypes()[0].getName();

    }
}
