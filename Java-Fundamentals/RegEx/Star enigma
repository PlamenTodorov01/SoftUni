package RegExExercise;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class StarEnigma_03 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());
        String decryptRegex = "[STARstar]";

        List<String> attackedPlanets = new ArrayList<>();
        List<String> destroyedPlanets = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            String message = scanner.nextLine();
            Pattern pattern = Pattern.compile(decryptRegex);
            Matcher matcher = pattern.matcher(message);
            int count = 0;
            StringBuilder sb = new StringBuilder();

            while (matcher.find()) {
                count++;
            }
            for (int j = 0; j < message.length(); j++) {
                int charAsInt = (int) message.charAt(j) - count;
                sb.append((char) charAsInt);

            }
            String decryptedMessage = String.valueOf(sb);

            String regex = "@(?<planetName>[A-Za-z]+)[^@!:>-]*:(?<population>[0-9]+)[^@!:>-]*!(?<attackType>[AD])[^@!:>-]*!->(?<soldiersCount>[0-9]+)";
            Pattern pattern1 = Pattern.compile(regex);
            Matcher matcher1 = pattern1.matcher(decryptedMessage);

            while (matcher1.find()) {
                String planetName = matcher1.group("planetName");
                String attackType = matcher1.group("attackType");

                if (attackType.equals("A")) {
                    attackedPlanets.add(planetName);
                } else if (attackType.equals("D")){
                    destroyedPlanets.add(planetName);
                }
            }

        }

        System.out.println("Attacked planets: " + attackedPlanets.size());
        Collections.sort(attackedPlanets);
        attackedPlanets.forEach(planet -> System.out.println("-> " + planet));

        System.out.println("Destroyed planets: " + destroyedPlanets.size());
        Collections.sort(destroyedPlanets);
        destroyedPlanets.forEach(planet -> System.out.println("-> " + planet));


    }
}
