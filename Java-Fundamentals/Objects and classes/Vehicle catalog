package ObjectsAndClassesExercise;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class VehicleCatalogue_05 {
    public static class Vehicle {
        String type;
        String model;
        String color;
        int horsePower;

        public Vehicle(String type, String model, String color, int horsePower) {
            this.type = type;
            this.model = model;
            this.color = color;
            this.horsePower = horsePower;
        }

        public String getType() {
            return type;
        }

        public String getModel() {
            return model;
        }

        public String getColor() {
            return color;
        }

        public int getHorsePower() {
            return horsePower;
        }

        public String toString() {
            return String.format("Type: %s%n" +
                    "Model: %s%n" +
                    "Color: %s%n" +
                    "Horsepower: %d",
                    getType().toUpperCase().charAt(0) + getType().substring(1), getModel(), getColor(), getHorsePower());
        }


    }

    public static double getAverageHorsePower (List<Vehicle> vehicles) {
        if (vehicles.isEmpty()) {
            return 0.0;
        }
        return vehicles.stream().mapToDouble(Vehicle::getHorsePower).sum() / vehicles.size();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String line = scanner.nextLine();
        List<Vehicle> vehicleCatalog = new ArrayList<>();

        while (!line.equals("End")) {
            String[] vehicleData = line.split(" ");
            String typeOfVehicle = vehicleData[0];
            String modelOfVehicle = vehicleData[1];
            String colorOfVehicle = vehicleData[2];
            int horsePowerOfVehicle = Integer.parseInt(vehicleData[3]);

            Vehicle vehicle = new Vehicle(typeOfVehicle, modelOfVehicle, colorOfVehicle, horsePowerOfVehicle);
            vehicleCatalog.add(vehicle);

            line = scanner.nextLine();
        }

        line = scanner.nextLine();

        while (!line.equals("Close the Catalogue")) {
            String model = line;

            vehicleCatalog.stream().filter(vehicle -> vehicle.getModel().equals(model))
                    .forEach(System.out::println);


            line = scanner.nextLine();
        }

        List<Vehicle> cars = vehicleCatalog.stream()
                .filter(vehicle -> vehicle.getType().equals("car"))
                .collect(Collectors.toList());

        List<Vehicle> trucks = vehicleCatalog.stream()
                .filter(vehicle -> vehicle.getType().equals("truck"))
                .collect(Collectors.toList());

        System.out.printf("Cars have average horsepower of: %.2f.%n", getAverageHorsePower(cars));
        System.out.printf("Trucks have average horsepower of: %.2f.", getAverageHorsePower(trucks));

    }
}
