package MultidimensionalArraysExercise;

import java.util.Arrays;
import java.util.Scanner;

public class DiagonalDifference_03 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        int[][] matrix = new int[n][n];

        fillMatrix(n, scanner, matrix);

        int primarySum = getSumOfPrimaryDiagonal(matrix);
        int secondarySum = getSumOfSecondaryDiagonal(matrix);

        System.out.println(Math.abs(primarySum - secondarySum));


    }

    private static int getSumOfPrimaryDiagonal(int[][] matrix) {
        int sum = 0;

        for (int row = 0; row < matrix.length; row++) {
            int numberToAdd = matrix[row][row];
            sum += numberToAdd;
        }

        return sum;
    }

    private static int getSumOfSecondaryDiagonal(int[][] matrix) {
        int sum = 0;

        for (int row = matrix.length - 1; row >= 0; row--) {
            int colIndex = matrix.length - 1 - row;
            int number = matrix[row][colIndex];
            sum += number;
        }

        return sum;
    }

    private static int[][] fillMatrix(int n, Scanner scanner, int[][] matrix) {
        for (int i = 0; i < n; i++) {
            int[] arr = Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();

            matrix[i] = arr;
        }
        return matrix;
    }
}
