package ExamJune2024;

import java.util.Scanner;

public class Beesy_02 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        char[][] field = new char[n][n];

        for (int row = 0; row < field.length; row++) {
            field[row] = scanner.nextLine().toCharArray();
        }

        int[] beePosition = findBeePosition(field);
        int beeRow = beePosition[0];
        int beeCol = beePosition[1];
        int beeEnergy = 15;
        int totalNectar = 0;
        boolean isHiveReached = false;
        boolean hasRestoredEnergy = false;

        while (beeEnergy > 0) {
            beeEnergy--;
            if (beeEnergy <= 0 && totalNectar > 30 && !hasRestoredEnergy) {
                int diff = totalNectar - 30;
                beeEnergy += diff;
                hasRestoredEnergy = true;
            }
            String command = scanner.nextLine();
            field[beeRow][beeCol] = '-';

            switch (command) {
                case "right" -> beeCol++;
                case "left" -> beeCol--;
                case "up" -> beeRow--;
                case "down" -> beeRow++;
            }

            if (beeRow < 0) {
                beeRow = field.length - 1;
            } else if (beeRow > field.length - 1) {
                beeRow = 0;
            } else if (beeCol < 0) {
                beeCol = field.length - 1;
            } else if (beeCol > field.length - 1) {
                beeCol = 0;
            }

            if (Character.isDigit(field[beeRow][beeCol])) {
                int nectar = Integer.parseInt(field[beeRow][beeCol] + "");
                totalNectar += nectar;
            } else if (field[beeRow][beeCol] == 'H') {
                isHiveReached = true;
                field[beeRow][beeCol] = 'B';
                break;
            }
            field[beeRow][beeCol] = 'B';


        }

        if (isHiveReached && totalNectar >= 30) {
            System.out.println("Great job, Beesy! The hive is full. Energy left: " + beeEnergy);
        } else if (isHiveReached) {
            System.out.println("Beesy did not manage to collect enough nectar.");
        } else if (beeEnergy == 0) {
            System.out.println("This is the end! Beesy ran out of energy.");
        }

        printMatrix(field);

    }

    private static int[] findBeePosition(char[][] field) {
        int[] beePosition = new int[2];
        for (int row = 0; row < field.length; row++) {
            for (int col = 0; col < field[row].length; col++) {
                if (field[row][col] == 'B') {
                    beePosition[0] = row;
                    beePosition[1] = col;
                }
            }
        }
        return beePosition;
    }

    public static void printMatrix(char[][] matrix) {
        for (int row = 0; row < matrix.length; row++) {
            for (int col = 0; col < matrix.length; col++) {
                System.out.print(matrix[row][col]);
            }
            System.out.println();

        }
    }
}
