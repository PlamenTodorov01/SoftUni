package FunctionalProgramming_Exercise;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.function.Predicate;
import java.util.stream.Collectors;

public class ThePartyReservationFilterModule_11 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<String> people = Arrays.stream(scanner.nextLine().split(" ")).collect(Collectors.toList());
        ArrayList<Predicate<String>> predicates = new ArrayList<>();
        List<String> filteredPeople = new ArrayList<>();

        String input = scanner.nextLine();
        
        while (!input.equals("Print")) {
            String[] tokens = input.split(";");
            String command = tokens[0];
            String filterType = tokens[1];
            String filterParameter = tokens[2];
            Predicate<String> predicate = null;

            switch (filterType) {
                case "Starts with" -> predicate = name -> !name.startsWith(filterParameter);
                case "Ends with" -> predicate = name -> !name.endsWith(filterParameter);
                case "Length" -> predicate = name -> name.length() != Integer.parseInt(filterParameter);
                case "Contains" -> predicate = name -> !name.contains(filterParameter);
            }

            switch (command) {
                case "Add filter" -> predicates.add(predicate);
                case "Remove filter" -> predicates.remove(predicate);
            }
           

            for (String person : people) {
                boolean isValid = true;
                for (Predicate<String> currentPredicate : predicates) {
                    if (!currentPredicate.test(person)) {
                        isValid = false;
                    }
                }
                if (isValid) {
                    filteredPeople.add(person);
                }

            }
            input = scanner.nextLine();
        }

    }
}
